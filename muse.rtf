{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green0\blue255;\red51\green51\blue191;\red191\green0\blue0;\red96\green96\blue96;\red255\green102\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs18 \cf2 (\
b = \cf3 Bus\cf2 .audio(s, 1);\
\
\cf3 SynthDef\cf2 (\cf4 \\muse\cf2 , \{\cf5 |freq, dur, vol|\cf2 \
	\cf5 var\cf2  env = \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 .linen(sustainTime: dur*0.925, attackTime: 0.075*dur, releaseTime: 0.01*dur), doneAction: 2);\
	\cf3 Out\cf2 .ar(b, \cf3 LPF\cf2 .ar(\cf3 Pulse\cf2 .ar(freq, width: 0.5, mul: vol*env), 11000));\
\}).send(s);\
\
\cf3 SynthDef\cf2 (\cf4 \\muse\cf2 , \{\cf5 |freq, dur, vol|\cf2 \
	\cf5 var\cf2  env = \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 .linen(sustainTime: dur*0.98, attackTime: 0.01*dur, releaseTime: 0.01*dur), doneAction: 2);\
	\cf3 Out\cf2 .ar(0, \cf3 LPF\cf2 .ar(\cf3 Pulse\cf2 .ar(freq, width: \cf3 MouseX\cf2 .kr(0.01, 0.99), mul: vol*env*\cf3 MouseY\cf2 .kr, add: \cf3 Resonz\cf2 .ar(\cf3 Saw\cf2 .ar(freq, mul: vol*env*\cf3 MouseY\cf2 .kr(1,0)), freq*1.2, 12)), 11000));\
\}).send(s);\
\
\cf3 SynthDef\cf2 (\cf4 \\museverb\cf2 , \{\
	\cf3 Out\cf2 .ar(0, \cf3 Pan2\cf2 .ar(\cf3 FreeVerb\cf2 .ar(\cf3 In\cf2 .ar(b), 0.45, 0.5)));\
\}).send(s);\
\
)\
\
(\
	\cf5 var\cf2  counter0=0, counter1=0, shiftreg=rrand(0, pow(2,30).asInteger), handler, interval, theme, makeanote, tempo=320, basefreq=220, finefreq=0, rest=false, vol, slider, major, mminor, hminor, acc, lastmnote, mminorlook;\
	\cf5 var\cf2  lookup;\
	\cf5 var\cf2  mv = \cf3 Synth\cf2 (\cf4 \\museverb\cf2 , [], s);\
	\cf5 var\cf2  note = \cf6 nil\cf2 ;\
	interval = \cf3 Array\cf2 .with(2,8,10,20);\
	theme = \cf3 Array\cf2 .with(5,7,25,20);\
	slider = \{\
		\cf5 |sliderval, i|\cf2 \
		\cf5 var\cf2  choice = 0;\
		(sliderval == 0).if \{ choice = 0 \}; \cf7 // off\cf2 \
		(sliderval == 1).if \{ choice = 1 \}; \cf7 // on\cf2 \
		(sliderval == 2).if \{ choice = counter0 & 1 \}; \cf7 // c1/2\cf2 \
		(sliderval == 3).if \{ choice = counter0 & 2 >> 1 \}; \cf7 // c1\cf2 \
		(sliderval == 4).if \{ choice = counter0 & 4 >> 2 \}; \cf7 // c2\cf2 \
		(sliderval == 5).if \{ choice = counter0 & 8 >> 3 \}; \cf7 // c4\cf2 \
		(sliderval == 6).if \{ choice = counter0 & 16 >> 4 \}; \cf7 // c8\cf2 \
		(sliderval == 7).if \{ choice = (counter1 / 3).asInteger % 2 \}; \cf7 // c3\cf2 \
		(sliderval == 8).if \{ choice = (counter1 >= 6).asInteger \}; \cf7 // c6\cf2 \
		(sliderval >= 9 && (sliderval <= 39)).if \{ choice = (shiftreg >> (sliderval.asInteger - 9)) & 1 \};\
		choice;\
	\};		\
		\
	makeanote = \{ \cf5 |freq|\cf2 \
		\cf5 var\cf2  dur;\
		\cf8 "makenote"\cf2 .postln;\
		if (t == \cf6 nil\cf2 , \{ dur = 1 \}, \{ dur = 2/t.tempo \});\
		\
		if ((counter0 & 1) == 1 && (note != \cf6 nil\cf2 ), \
			\{note.set(\cf4 \\freq\cf2 , freq, \cf4 \\vol\cf2 , vol);\},\
			\{note = \cf3 Synth\cf2 (\cf4 \\muse\cf2 , [\cf4 \\freq\cf2 , freq, \cf4 \\dur\cf2 , dur, \cf4 \\vol\cf2 , vol], mv, \cf4 \\addBefore\cf2 );\}\
		);\
	\};\
	\
	handler = \{ \
		\cf5 var\cf2  notes, freq, parity, mnote;\
		parity = theme.sum(slider).asInteger & 1;\
		(\cf8 "shiftreg"\cf2  + (shiftreg&0x7fffffff).asHexString).postln;\
		notes = interval.collect(slider);\
		mnote = notes[0] + (2 * notes[1]) + (4 * notes[2]);\
		freq = (basefreq.cpsmidi + lookup[mnote]);\
		(\cf8 "A"\cf2 +freq).postln;\
		if ((mminorlook == 1) &&\
			((mnote == 5) || (mnote == 6)) &&\
			(lastmnote != \cf6 nil\cf2 )\
		, \{\
			if (lastmnote > mnote, \{\
				freq = freq - 1;\
				freq.postln;\
			\});\
		\});\
		lastmnote = mnote;\
		freq = freq.midicps * (1 + notes[3]);\
		\cf0 (\cf8 "B"\cf2 +freq).postln;\
		("R"+rest).postln;\
		("N"+notes.sum).postln;\
		if (rest == \cf6 false\cf2  || (notes.sum != 0)) \{\
			makeanote.value(freq * finefreq);\
		\};\
		(\cf8 "counter0"\cf2  + counter0).postln;\
		(\cf8 "counter1"\cf2  + counter1).postln;\
		if (counter0&1 == 1, \{\
			counter1 = (counter1+1) % 12;\
			shiftreg = shiftreg << 1 | parity;\
		\});\
		counter0 = (counter0+1) % 32;\
	\};\
	\
	\cf3 Window\cf2 .allWindows.do \{ \cf5 |w|\cf2  if (w.name == \cf8 "The Muse"\cf2 ) \{ w.close \} \};\
	w = \cf3 Window\cf2 .new(\cf8 "The Muse"\cf2 , \cf3 Rect\cf2 (200,200,800,710));\
	c = \cf3 ControlSpec\cf2 .new(0, 39, step: 1);\
	t = \cf3 TempoClock\cf2 .new;\
	\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,0,800,75), \cf8 "Interval A"\cf2 , c, \{ \cf5 |ez|\cf2  interval[0] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,75,800,75), \cf8 "Interval B"\cf2 , c, \{ \cf5 |ez|\cf2  interval[1] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,150,800,75), \cf8 "Interval C"\cf2 , c, \{ \cf5 |ez|\cf2  interval[2] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,225,800,75), \cf8 "Interval D"\cf2 , c, \{ \cf5 |ez|\cf2  interval[3] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,300,800,75), \cf8 "Theme W"\cf2 , c, \{ \cf5 |ez|\cf2  theme[0] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,375,800,75), \cf8 "Theme X"\cf2 , c, \{ \cf5 |ez|\cf2  theme[1] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,450,800,75), \cf8 "Theme Y"\cf2 , c, \{ \cf5 |ez|\cf2  theme[2] = ez.value\}, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,525,800,75), \cf8 "Theme Z"\cf2 , c, \{ \cf5 |ez|\cf2  theme[3] = ez.value\}, initAction:\cf6 true\cf2 );\
	\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,600,400,40), \cf8 "Volume"\cf2 , action: \{\cf5 |ez|\cf2  vol = ez.value;\}, initVal: 0.75, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (400,600,400,40), \cf8 "Pitch"\cf2 , \cf3 ControlSpec\cf2 (0,127, step:1),action: \{\cf5 |ez|\cf2  basefreq = ez.value.midicps;\}, initVal: 32, initAction:\cf6 true\cf2 );\
	\cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (0,640,400,40), \cf8 "Fine Pitch"\cf2 , \cf3 ControlSpec\cf2 (1/1.0595465, 1.0595465), action: \{\cf5 |ez|\cf2  finefreq = ez.value\}, initVal: 1, initAction: \cf6 true\cf2 );\
	\cf9 ~tempobutton\cf2  = \cf3 EZSlider\cf2 .new(w, \cf3 Rect\cf2 (400,640,400,40), \cf8 "Tempo"\cf2 , \cf3 ControlSpec\cf2 (12, 600), action: \{\cf5 |ez|\cf2  if (t != \cf6 nil\cf2 ) \{t.tempo = ez.value / 60\}\}, initVal: 160, initAction: \cf6 true\cf2 );\
	\cf3 Button\cf2 .new(w,\cf3 Rect\cf2 (0,680,80,30)).states_([[\cf8 "Start"\cf2 ],[\cf8 "Stop"\cf2 ]]).action_(\{\
		\cf5 |button|\cf2 \
		if ((button.value == 0), \{\
			\cf8 "hold"\cf2 .postln;\
			t.stop;\
			t = \cf6 nil\cf2 ;\
		\}, \{\
			\cf8 "foof"\cf2 .postln;\
			t = \cf3 TempoClock\cf2 .new(\cf9 ~tempobutton\cf2 .value/60);\
			mv.free;\
			mv = \cf3 Synth\cf2 (\cf4 \\museverb\cf2 , [], s);\
			t.sched(0, \{ handler.value(lookup, basefreq); 1\})\
		\});\
	\});\
	\cf3 Button\cf2 .new(w,\cf3 Rect\cf2 (80,680,80,30)).states_([[\cf8 "Step"\cf2 ]]).action_(\{\cf5 |button|\cf2  handler.value(lookup, basefreq);\});\
	\cf3 Button\cf2 .new(w,\cf3 Rect\cf2 (160,680,80,30)).states_([[\cf8 "Reset"\cf2 ]]).action_(\{counter0 = counter1 = shiftreg = 0;\});\
	\cf3 CheckBox\cf2 .new(w, \cf3 Rect\cf2 (240,680,80,30), \cf8 "Rest"\cf2 ).action = \{ \cf5 |state|\cf2  rest = state.value \};\
	major = \cf3 CheckBox\cf2 .new(w, \cf3 Rect\cf2 (320,680,80,30), \cf8 "Major"\cf2 ).action = \{\
		\cf8 "majorclick"\cf2 .postln;\
		major.value.postln;\
		if (major.value, \{\
			\cf8 "majoron"\cf2 .postln;\
			hminor.value = 0;\
			mminor.value = 0;\
			lookup = [0,2,4,5,7,9,11,12];\
		\});\
		mminorlook = \cf6 false\cf2 ;\
	\};\
	\
	hminor = \cf3 CheckBox\cf2 .new(w, \cf3 Rect\cf2 (400,680,80,30), \cf8 "Harmonic"\cf2 ).action = \{\
		\cf8 "hmonirclick"\cf2 .postln;\
		if (hminor.value, \{\
			\cf8 "hmoniron"\cf2 .postln;\
			major.value = 0;\
			mminor.value = 0;\
			lookup = [0,2,3,5,7,8,11,12]\
		\});\
		mminorlook = \cf6 false\cf2 ;\
	\};\
	\
	mminor = \cf3 CheckBox\cf2 .new(w, \cf3 Rect\cf2 (480,680,80,30), \cf8 "Melodic"\cf2 ).action = \{\
		\cf8 "mmonirclick"\cf2 .postln;\
		if (mminor.value, \{\
			\cf8 "mminor"\cf2 .postln;\
			hminor.value = 0;\
			major.value = 0;\
			lookup = [0,2,3,5,7,9,11,12]\
		\});\
		mminorlook = \cf6 true\cf2 ;\
	\};\
	\
	major.valueAction = \cf6 true\cf2 ;\
	\cf9 ~display\cf2  = \cf3 StaticText\cf2 (w,\cf3 Rect\cf2 (0,800,40,710)).font_(\cf8 "Monaco"\cf2 ).stringColor_(\cf3 Color\cf2 .gray(0,1));\
	w.onClose = \{ t.stop \};\
	w.front;\
)\
\
\pard\pardeftab720
\cf2 \
}